plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	exclusiveContent {
    forRepository {
      maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
      }
    }

    filter {
      includeGroup "maven.modrinth"
    }
  }

	maven {
		url 'https://maven.wispforest.io/releases/'
	}
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"cranberry" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "maven.modrinth:circumflex:${project.circumflex_version}"

	modImplementation "io.wispforest:owo-lib:${project.owo_version}"
  include "io.wispforest:owo-sentinel:${project.owo_version}"
	annotationProcessor modImplementation("io.wispforest:owo-lib:${project.owo_version}")

	implementation "de.androidpit:color-thief:${project.color_thief_version}"
	include "de.androidpit:color-thief:${project.color_thief_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	repositories {}
}

tasks.build.doFirst {
	// build and copy the dylib
	exec {
		commandLine 'bash', '-c', 'cd Cranberry && swift build -c release && cp .build/release/libCranberry.dylib ../src/main/resources/assets/cranberry'
	}

	// copy the generated code - not necessary for a successful build, but it quells vscode
	copy {
		from "build/generated/sources/annotationProcessor/java/client/"
		into "build/generated/sources/annotationProcessor/java/client/diacritics/owo/config"
		include "ClientConfig.java"
	}
}
